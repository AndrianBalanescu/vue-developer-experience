// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compile/tsx 1. Render Context Type 1`] = `Array []`;

exports[`compile/tsx 1. Render Context Type 2`] = `Array []`;

exports[`compile/tsx 2. Import Component 1`] = `Array []`;

exports[`compile/tsx 2. Import Component 2`] = `
Array [
  "Foo               => Foo",
  "Foo               => Foo",
]
`;

exports[`compile/tsx 3. Named Import Component 1`] = `Array []`;

exports[`compile/tsx 3. Named Import Component 2`] = `
Array [
  "Foo               => Foo",
  "Foo               => Foo",
]
`;

exports[`compile/tsx 4. Unresolved/Global Component 1`] = `Array []`;

exports[`compile/tsx 4. Unresolved/Global Component 2`] = `Array []`;

exports[`compile/tsx 5. Preserve Web Component 1`] = `Array []`;

exports[`compile/tsx 5. Preserve Web Component 2`] = `Array []`;

exports[`compile/tsx 6. Attributes to Props 1`] = `Array []`;

exports[`compile/tsx 6. Attributes to Props 2`] = `
Array [
  "type              => type",
  "\\"text\\"            => \\"text\\"",
  "type              => type",
  "\\"text\\"            => \\"text\\"",
]
`;

exports[`compile/tsx 7. Rename v-on events 1`] = `Array []`;

exports[`compile/tsx 7. Rename v-on events 2`] = `
Array [
  "focus             => onFocus",
]
`;

exports[`compile/tsx 8. Rewrite expressions 1`] = `
Array [
  "style",
  "value",
  "key",
  "handleHover",
  "handleEvent",
  "event",
  "hello",
]
`;

exports[`compile/tsx 8. Rewrite expressions 2`] = `
Array [
  "style             => style",
  "style             => _ctx.style",
  "key               => _ctx.key",
  "value             => _ctx.value",
  "hover             => onHover",
  "handleHover       => _ctx.handleHover",
  "event             => _ctx.event",
  "handleEvent       => _ctx.handleEvent",
  "hello             => _ctx.hello",
]
`;

exports[`compile/tsx 9. Transform v-model 1`] = `
Array [
  "foo",
]
`;

exports[`compile/tsx 9. Transform v-model 2`] = `
Array [
  "foo               => _ctx.foo",
  "foo               => _ctx.foo",
]
`;

exports[`compile/tsx 10. Transform v-model custom 1`] = `
Array [
  "foo",
]
`;

exports[`compile/tsx 10. Transform v-model custom 2`] = `
Array [
  "foo               => _ctx.foo",
  "foo               => _ctx.foo",
]
`;

exports[`compile/tsx 11. Transform v-model dynamic 1`] = `
Array [
  "foo",
  "checked",
]
`;

exports[`compile/tsx 11. Transform v-model dynamic 2`] = `
Array [
  "checked           => _ctx.checked",
  "foo               => _ctx.foo",
  "checked           => _ctx.checked",
  "foo               => _ctx.foo",
]
`;

exports[`compile/tsx 12. Wrap event expressions 1`] = `
Array [
  "bar = $event",
]
`;

exports[`compile/tsx 12. Wrap event expressions 2`] = `
Array [
  "focus             => onFocus",
  "bar               => _ctx.bar",
  "$event            => $event",
]
`;

exports[`compile/tsx 13. Convert v-show to ternary 1`] = `
Array [
  "isVisible",
]
`;

exports[`compile/tsx 13. Convert v-show to ternary 2`] = `
Array [
  "style             => style",
  "\\"color: red\\"      => \\"color: red\\"",
  "isVisible         => _ctx.isVisible",
]
`;

exports[`compile/tsx 14. Convert v-if, v-else-if, v-else to ternary 1`] = `
Array [
  "foo",
  "bar",
]
`;

exports[`compile/tsx 14. Convert v-if, v-else-if, v-else to ternary 2`] = `
Array [
  "foo               => _ctx.foo",
  "bar               => _ctx.bar",
]
`;

exports[`compile/tsx 15. Convert v-if to ternary 1`] = `
Array [
  "foo",
]
`;

exports[`compile/tsx 15. Convert v-if to ternary 2`] = `
Array [
  "foo               => _ctx.foo",
]
`;

exports[`compile/tsx 16. Convert v-for to renderList 1`] = `
Array [
  "(item, index) of items",
  "item",
  "other",
]
`;

exports[`compile/tsx 16. Convert v-for to renderList 2`] = `
Array [
  "items             => _ctx.items",
  "item              => item",
  "index             => index",
  "item              => item",
  "other             => _ctx.other",
]
`;

exports[`compile/tsx 17. Convert v-text/v-html to children 1`] = `
Array [
  "foo",
  "foo",
]
`;

exports[`compile/tsx 17. Convert v-text/v-html to children 2`] = `
Array [
  "foo               => _ctx.foo",
  "foo               => _ctx.foo",
]
`;

exports[`compile/tsx 18. Custom directive 1`] = `
Array [
  "exp",
  "exp",
  "arg",
]
`;

exports[`compile/tsx 18. Custom directive 2`] = `
Array [
  "exp               => _ctx.exp",
  "arg               => _ctx.arg",
  "exp               => _ctx.exp",
]
`;
